Project RATCH {
  database_type: 'PostgreSQL'
  Note: 'Requirements and Test Case Hub'
}

Table Users as U {
  user_id int [pk, increment, unique]
  first_name varchar
  last_name varchar
  email varchar
  username varchar
  password varchar
  created timestamp [default: `now()`]
  lastseen timestamp [default: `now()`]
}

Table Projects as P {
  project_id int [pk, increment, unique]
  project_name varchar
  project_description text
  classification classification
  created timestamp [default: `now()`]
  updated timestamp [default: `now()`]
 }

Table Requirements as R {
  requirement_id int [pk, increment, unique]
  requirement_name varchar
  release_version enum
  requirement_description text
  type int [ref: - requirementtypes.type_id]
  classification classification
  last_modified timestamp [default: `now()`]
  last_modified_by int [ref: - U.user_id]
}

Table RequirementTypes {
  type_id int [pk, increment]
  type_name varchar [unique]
  type_description text
}

Table TestCases as T {
  case_id int [pk, increment]
  case_name varchar
  case_desciption text
  prerequisites text
  last_modified timestamp
  last_modified_by int [ref: - U.user_id]
}

Table TestSteps {
  step_id int [pk, increment]
  procedure_text text
  verification_text text
  notes text
  test_case int [ref: - T.case_id]
  step_number int
}

Table CustomFields {
  custom_field_id int [pk, increment]
  custom_field_name varchar
  custom_field_description text
  custom_field_type int [ref: - CustomFieldTypes.custom_field_type_id]
}

Table CustomFieldTypes {
  custom_field_type_id int [pk, increment]
  custom_field_type_name varchar [unique]
}

Table Permissions {
  permission_id int
  permission_name varchar
  permission_description text
}

Table GlobalRoles {
  global_role_id int [pk, unique]
  global_role_name varchar
  global_role_description text
}

Table ProjectRoles {
  project_role_id int [pk, unique]
  project_id int [ref: - P.id]
  project_role_name varchar
  description text
}

Table RequirementsByTestSteps {
  step_id int [ref: - TestSteps.step_id]
  requirement_id int [ref: - R.requirement_id]
  indexes {
    (step_id, requirement_id) [pk]
  }
}

Table TestStepsByTestCases { 
  case_id int [ref: - TestCases.case_id]
  step_id int [ref: - TestSteps.step_id]
  indexes {
    (case_id, step_id) [pk]
  }
}

Table UsersByProject {
  user_id int [ref: - U.user_id]
  project_id int [ref: - P.project_id]
  indexes {
    (user_id, project_id) [pk]
  }
}

Table RequirementsByProject {
  project_id int [ref: - P.project_id]
  requirement_id int [ref: - R.requirement_id]
  indexes {
    (project_id, requirement_id) [pk]
  }
}

Table TestCasesByProject {
  project_id int [ref: - P.project_id]
  case_id int [ref: TestCases.case_id]
  indexes {
    (project_id, case_id) [pk]
  }
}

Table PermissionsByProjectRole {
  project_role_id int [ref: - ProjectRoles.project_role_id]
  permission_id int [ref: - Permissions.permission_id]
  indexes {
    (project_role_id, permission_id) [pk]
  }
}

Table PermissionsByGlobalRole {
  permission_id int [ref: - Permissions.permission_id]
  global_role_id int [ref: - GlobalRoles.global_role_id]
  indexes {
    (permission_id, global_role_id) [pk]
  }
}

Table GlobalRoleByUser {
  user_id int [ref: - U.user_id]
  global_role_id int [ref: GlobalRoles.global_role_id]
  grant_date timestamp
  indexes {
    (user_id, global_role_id) [pk]
  }
}

Table ProjectRolesByUser {
  user_id int [ref: - U.user_id]
  project_role_id int [ref: ProjectRoles.project_role_id]
  grant_date timestamp
  indexes {
    (user_id, project_role_id) [pk]
  }
}